#!/bin/bash
if [ "$#" != "2" ];then
	if [ "$#" == "1" -a "$1" == "--help" ];then
echo  "Usage:
	mkcs /path java: find java code path
	mkcs /path cpp : find c++  code path
	mkcs /path c   : find c    code path
	mkcs /path mk  : find make code path
	mkcs /path all : find all  code path
	mkcs /path make: get ctags files and cscope files"
	elif [ "$#" == "3" ];then
	PRJ_SRC=$3
	echo "OK"
	else
		echo " Please set file type and folder "
		exit -1
	fi
fi
PRJ_TYPE=$2

SRC_DIR=$1
case ${PRJ_TYPE} in
    java)
    find ${SRC_DIR}                         \
                -name ".svn" -prune         \
                -or -name ".git" -prune     \
                -or -name "out" -prune     \
                -or -name "vendor" -prune     \
                -or -name "prebuilts" -prune     \
                -or -name "*.java"          \
				> ${PWD}/javacscope.files
    ;;
    cpp)
    find ${SRC_DIR}                         \
                -name ".svn" -prune         \
                -or -name ".git" -prune     \
                -or -name "out" -prune     \
                -or -name "vendor" -prune     \
                -or -name "prebuilts" -prune     \
                -or -name "*.cpp"           \
                -or -name "*.cc"            \
                > ${PWD}/cppcscope.files
    ;;
	c)
    find ${SRC_DIR}                         \
                -name ".svn" -prune         \
                -or -name ".git" -prune     \
                -or -name "out" -prune     \
                -or -name "vendor" -prune     \
                -or -name "prebuilts" -prune     \
                -or -name "*.h"             \
                -or -name "*.c"            \
                > ${PWD}/ccscope.files
	;;
	mk)
	find ${SRC_DIR}                         \
				-name ".svn" -prune         \
				-or -name ".git" -prune     \
                -or -name "out" -prune     \
                -or -name "vendor" -prune     \
                -or -name "prebuilts" -prune     \
				-or -name "*.mk"            \
				-or -name "Makefile"        \
				> ${PWD}/mkcscope.files
	;;
    all)
    find ${SRC_DIR}                         \
                -name ".svn" -prune         \
                -or -name ".git" -prune     \
                -or -name "out" -prune     \
                -or -name "vendor" -prune     \
                -or -name "prebuilts" -prune     \
                -or -name "*.java"          \
				> ${PWD}/javacscope.files;
    find ${SRC_DIR}                         \
                -name ".svn" -prune         \
                -or -name ".git" -prune     \
                -or -name "out" -prune     \
                -or -name "vendor" -prune     \
                -or -name "prebuilts" -prune     \
                -or -name "*.cpp"           \
                -or -name "*.cc"            \
                > ${PWD}/cppcscope.files;
    find ${SRC_DIR}                         \
                -name ".svn" -prune         \
                -or -name ".git" -prune     \
                -or -name "out" -prune     \
                -or -name "vendor" -prune     \
                -or -name "prebuilts" -prune     \
                -or -name "*.h"             \
                -or -name "*.c"            \
                > ${PWD}/ccscope.files
	find ${SRC_DIR}                         \
				-name ".svn" -prune         \
				-or -name ".git" -prune     \
                -or -name "out" -prune     \
                -or -name "vendor" -prune     \
                -or -name "prebuilts" -prune     \
				-or -name "*.mk"            \
				-or -name "Makefile"        \
				> ${PWD}/mkcscope.files;
	;;
	make)
# generate tag file for lookupfile plugin
		echo "!_TAG_FILE_SORTED	2	/2=foldcase/" > ${PWD}/filenametags
		find ${SRC_DIR}                         \
		        -name ".svn" -prune         \
			     -or -name ".git" -prune     \
                -or -name "out" -prune     \
                -or -name "vendor" -prune     \
                -or -name "prebuilts" -prune     \
				  -or -type f                 \
				 -printf "%f\t%p\t1\n"       \
				 | sort -f >> ${PWD}/filenametags

		case ${PRJ_SRC} in
			java)
				mkdir -p ${PWD}/javacscope 
				cscope -bkq -i ${PWD}/javacscope.files
				mv ${PWD}/cscope.in.out  ${PWD}/cscope.out  ${PWD}/cscope.po.out ${PWD}/javacscope
				cat ${PWD}/javacscope.files >${PWD}/cscope.files
				ctags --c++-kinds=+p --fields=+iaS --extra=+q -L ${PWD}/cscope.files
				echo \
	"
silent cs add `pwd`/javacscope/cscope.out
set tags+=`pwd`/tags" > ${PWD}/a.vim
				#echo "source  `pwd`/a.vim" >> $VIMRUNTIME/plugin/csfile.vim
				;;
			c)
				mkdir -p ${PWD}/ccscope 
				cscope -bkq -i ${PWD}/ccscope.files
				mv ${PWD}/cscope.in.out  ${PWD}/cscope.out  ${PWD}/cscope.po.out ${PWD}/ccscope
				cat ${PWD}/ccscope.files >>${PWD}/cscope.files
				ctags --c++-kinds=+p --fields=+iaS --extra=+q -L ${PWD}/cscope.files
				echo \
	"
silent cs add `pwd`/ccscope/cscope.out 
set tags+=`pwd`/tags" > ${PWD}/a.vim
				#echo "source  `pwd`/a.vim" >> $VIMRUNTIME/plugin/csfile.vim
				;;
			cpp)
				mkdir -p ${PWD}/cppcscope 
				cscope -bkq -i ${PWD}/cppcscope.files
				mv ${PWD}/cscope.in.out  ${PWD}/cscope.out  ${PWD}/cscope.po.out ${PWD}/cppcscope
				cat ${PWD}/cppcscope.files >>${PWD}/cscope.files
				ctags --c++-kinds=+p --fields=+iaS --extra=+q -L ${PWD}/cscope.files
				echo \
	"
silent cs add `pwd`/cppcscope/cscope.out 
set tags+=`pwd`/tags" > ${PWD}/a.vim
				#echo "source  `pwd`/a.vim" >> $VIMRUNTIME/plugin/csfile.vim
				;;
			make)
				mkdir -p ${PWD}/mkcscope 
				cscope -bkq -i ${PWD}/mkcscope.files
				mv ${PWD}/*.out  ${PWD}/mkcscope
				cat ${PWD}/mkcscope.files >>${PWD}/cscope.files
				ctags --c++-kinds=+p --fields=+iaS --extra=+q -L ${PWD}/cscope.files
				echo \
	"
silent cs add `pwd`/mkcscope/cscope.out 
set tags+=`pwd`/tags" > ${PWD}/a.vim
				#echo "source  `pwd`/a.vim" >> $VIMRUNTIME/plugin/csfile.vim
				;;
			*)
# Generate cscope database & tags
				mkdir -p ${PWD}/javacscope ${PWD}/cppcscope ${PWD}/ccscope ${PWD}/mkcscope

				cscope -bkq -i ${PWD}/javacscope.files
				mv ${PWD}/cscope.in.out  ${PWD}/cscope.out  ${PWD}/cscope.po.out ${PWD}/javacscope


				cscope -bkq -i ${PWD}/cppcscope.files
				mv ${PWD}/cscope.in.out  ${PWD}/cscope.out  ${PWD}/cscope.po.out ${PWD}/cppcscope

				cscope -bkq -i ${PWD}/ccscope.files
				mv ${PWD}/cscope.in.out  ${PWD}/cscope.out  ${PWD}/cscope.po.out ${PWD}/ccscope

				cscope -bkq -i ${PWD}/mkcscope.files
				mv ${PWD}/*.out  ${PWD}/mkcscope
				cat ${PWD}/javacscope.files >${PWD}/cscope.files
				cat ${PWD}/cppcscope.files >>${PWD}/cscope.files
				cat ${PWD}/mkcscope.files >>${PWD}/cscope.files
				cat ${PWD}/ccscope.files >>${PWD}/cscope.files
				ctags --c++-kinds=+p --fields=+iaS --extra=+q -L ${PWD}/cscope.files
				echo \
	"
silent cs add `pwd`/cppcscope/cscope.out 
silent cs add `pwd`/ccscope/cscope.out 
silent cs add `pwd`/mkcscope/cscope.out 
silent cs add `pwd`/javacscope/cscope.out
set tags+=`pwd`/tags" > ${PWD}/a.vim
				#echo "source  `pwd`/a.vim" >> $VIMRUNTIME/plugin/csfile.vim
				;; 
			esac
	;;
	*)
	;;
esac
